import { Buffer } from "buffer";
import { Client as ContractClient, Spec as ContractSpec } from "@stellar/stellar-sdk/contract";
export * from "@stellar/stellar-sdk";
export * as contract from "@stellar/stellar-sdk/contract";
export * as rpc from "@stellar/stellar-sdk/rpc";
if (typeof window !== "undefined") {
  //@ts-ignore Buffer exists
  window.Buffer = window.Buffer || Buffer;
}
export const networks = {
  testnet: {
    networkPassphrase: "Test SDF Network ; September 2015",
    contractId: "CDUXDVFU3J3J4DHCX4MOJRUX5YO3QLBXCJFLRLGWZ6ACVL76JQUG5TTL",
  },
};
export const Errors = {
  1: { message: "IncorrectPriceLevelStorageState" },
  2: { message: "InvalidOrderId" },
  3: { message: "SameValueStored" },
  4: { message: "AmountMustBePositive" },
  5: { message: "SamePairTokens" },
  6: { message: "BalanceNotEnough" },
  7: { message: "OrderNotFound" },
  8: { message: "IncorrectPrecisionCalculation" },
  9: { message: "InvalidIdFailedToRemove" },
  10: { message: "InvalidIdFailedToUpdate" },
  11: { message: "InvalidIdFailedToLoad" },
  12: { message: "PriceStoreInvalidIndex" },
  13: { message: "PriceStoreOrderNotFoundByIndex" },
  14: { message: "LevelsStorePriceNotFound" },
  15: { message: "LevelsStoreLevelNotFound" },
  16: { message: "LevelsStoreRemoveFailed" },
  17: { message: "OrderBookNotFound" },
};
export class Client extends ContractClient {
  options;
  constructor(options) {
    super(
      new ContractSpec([
        "AAAABAAAAAAAAAAAAAAABUVycm9yAAAAAAAAEQAAAAAAAAAfSW5jb3JyZWN0UHJpY2VMZXZlbFN0b3JhZ2VTdGF0ZQAAAAABAAAAAAAAAA5JbnZhbGlkT3JkZXJJZAAAAAAAAgAAAAAAAAAPU2FtZVZhbHVlU3RvcmVkAAAAAAMAAAAAAAAAFEFtb3VudE11c3RCZVBvc2l0aXZlAAAABAAAAAAAAAAOU2FtZVBhaXJUb2tlbnMAAAAAAAUAAAAAAAAAEEJhbGFuY2VOb3RFbm91Z2gAAAAGAAAAAAAAAA1PcmRlck5vdEZvdW5kAAAAAAAABwAAAAAAAAAdSW5jb3JyZWN0UHJlY2lzaW9uQ2FsY3VsYXRpb24AAAAAAAAIAAAAAAAAABdJbnZhbGlkSWRGYWlsZWRUb1JlbW92ZQAAAAAJAAAAAAAAABdJbnZhbGlkSWRGYWlsZWRUb1VwZGF0ZQAAAAAKAAAAAAAAABVJbnZhbGlkSWRGYWlsZWRUb0xvYWQAAAAAAAALAAAAAAAAABZQcmljZVN0b3JlSW52YWxpZEluZGV4AAAAAAAMAAAAAAAAAB5QcmljZVN0b3JlT3JkZXJOb3RGb3VuZEJ5SW5kZXgAAAAAAA0AAAAAAAAAGExldmVsc1N0b3JlUHJpY2VOb3RGb3VuZAAAAA4AAAAAAAAAGExldmVsc1N0b3JlTGV2ZWxOb3RGb3VuZAAAAA8AAAAAAAAAF0xldmVsc1N0b3JlUmVtb3ZlRmFpbGVkAAAAABAAAAAAAAAAEU9yZGVyQm9va05vdEZvdW5kAAAAAAAAEQ==",
        "AAAAAgAAAAAAAAAAAAAACU9yZGVyU2lkZQAAAAAAAAIAAAAAAAAAAAAAAANCVVkAAAAAAAAAAAAAAAAEU0VMTA==",
        "AAAAAgAAAAAAAAAAAAAACU9yZGVyVHlwZQAAAAAAAAIAAAAAAAAAAAAAAAVMaW1pdAAAAAAAAAAAAAAAAAAABk1hcmtldAAA",
        "AAAAAQAAAAAAAAAAAAAABU9yZGVyAAAAAAAABgAAAAAAAAAHYWNjb3VudAAAAAATAAAAAAAAAApmZWVfYW1vdW50AAAAAAAKAAAAAAAAAA9mZWVfdG9rZW5fYXNzZXQAAAAAEwAAAAAAAAAIb3JkZXJfaWQAAAAGAAAAAAAAAAVwcmljZQAAAAAAAAoAAAAAAAAACHF1YW50aXR5AAAACg==",
        "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",
      ]),
      options,
    );
    this.options = options;
  }
  fromJSON = {
    initialize: this.txFromJSON,
    create_order: this.txFromJSON,
    cancel_order: this.txFromJSON,
    deposit: this.txFromJSON,
    withdraw: this.txFromJSON,
    balances: this.txFromJSON,
    upgrade: this.txFromJSON,
  };
}
