import { Buffer } from "buffer";
import { Client as ContractClient, Spec as ContractSpec, } from '@stellar/stellar-sdk/contract';
export * from '@stellar/stellar-sdk';
export * as contract from '@stellar/stellar-sdk/contract';
export * as rpc from '@stellar/stellar-sdk/rpc';
if (typeof window !== 'undefined') {
    //@ts-ignore Buffer exists
    window.Buffer = window.Buffer || Buffer;
}
export const networks = {
    testnet: {
        networkPassphrase: "Test SDF Network ; September 2015",
        contractId: "CC2XEBD3OI2DIIOTNJ4OZ5BZGU2BJMGRQ47QFMYXL6FEHBHYAKPGEH5H",
    }
};
export const Errors = {
    1: { message: "EmptyNodeView" },
    2: { message: "ZeroValueInsert" },
    3: { message: "NotAChildOfItsParent" },
    4: { message: "NotAParentOfChild" },
    5: { message: "IncorrectPriceLevelStorageState" },
    6: { message: "InvalidOrderIndex" },
    7: { message: "SameValueStored" },
    8: { message: "AmountMustBePositive" },
    9: { message: "TokenIsNotListed" },
    10: { message: "PairNotExist" },
    11: { message: "PairAlreadyAdded" },
    12: { message: "SamePairTokens" },
    13: { message: "BalanceNotEnough" }
};
export class Client extends ContractClient {
    options;
    constructor(options) {
        super(new ContractSpec(["AAAABAAAAAAAAAAAAAAABUVycm9yAAAAAAAADQAAAAAAAAANRW1wdHlOb2RlVmlldwAAAAAAAAEAAAAAAAAAD1plcm9WYWx1ZUluc2VydAAAAAACAAAAAAAAABROb3RBQ2hpbGRPZkl0c1BhcmVudAAAAAMAAAAAAAAAEU5vdEFQYXJlbnRPZkNoaWxkAAAAAAAABAAAAAAAAAAfSW5jb3JyZWN0UHJpY2VMZXZlbFN0b3JhZ2VTdGF0ZQAAAAAFAAAAAAAAABFJbnZhbGlkT3JkZXJJbmRleAAAAAAAAAYAAAAAAAAAD1NhbWVWYWx1ZVN0b3JlZAAAAAAHAAAAAAAAABRBbW91bnRNdXN0QmVQb3NpdGl2ZQAAAAgAAAAAAAAAEFRva2VuSXNOb3RMaXN0ZWQAAAAJAAAAAAAAAAxQYWlyTm90RXhpc3QAAAAKAAAAAAAAABBQYWlyQWxyZWFkeUFkZGVkAAAACwAAAAAAAAAOU2FtZVBhaXJUb2tlbnMAAAAAAAwAAAAAAAAAEEJhbGFuY2VOb3RFbm91Z2gAAAAN",
            "AAAAAgAAAAAAAAAAAAAACU9yZGVyU2lkZQAAAAAAAAIAAAAAAAAAAAAAAANCVVkAAAAAAAAAAAAAAAAEU0VMTA==",
            "AAAAAgAAAAAAAAAAAAAACU9yZGVyVHlwZQAAAAAAAAIAAAAAAAAAAAAAAAVMaW1pdAAAAAAAAAAAAAAAAAAABk1hcmtldAAA",
            "AAAAAQAAAAAAAAAAAAAABU9yZGVyAAAAAAAABgAAAAAAAAAHYWNjb3VudAAAAAATAAAAAAAAAApmZWVfYW1vdW50AAAAAAAKAAAAAAAAAA9mZWVfdG9rZW5fYXNzZXQAAAAAEwAAAAAAAAAIb3JkZXJfaWQAAAAGAAAAAAAAAAVwcmljZQAAAAAAAAoAAAAAAAAACHF1YW50aXR5AAAACg==",
            "AAAAAQAAAAAAAAAAAAAACE5ld09yZGVyAAAABAAAAAAAAAAKZmVlX2Ftb3VudAAAAAAACgAAAAAAAAAPZmVlX3Rva2VuX2Fzc2V0AAAAABMAAAAAAAAABXByaWNlAAAAAAAACgAAAAAAAAAIcXVhbnRpdHkAAAAK",
            "AAAAAgAAAAAAAAAAAAAAC09yZGVyQm9va0lkAAAAAAIAAAABAAAAAAAAAAVCdXlJZAAAAAAAAAEAAAfQAAAADFByaWNlTGV2ZWxJZAAAAAEAAAAAAAAABlNlbGxJZAAAAAAAAQAAB9AAAAAMUHJpY2VMZXZlbElk",
            "AAAAAQAAAAAAAAAAAAAADFByaWNlTGV2ZWxJZAAAAAIAAAAAAAAAAmlkAAAAAAAGAAAAAAAAAAVwcmljZQAAAAAAAAo=",
            "AAAAAQAAAAAAAAAAAAAACU9yZGVyQm9vawAAAAAAAAIAAAAAAAAACmJ1eV9vcmRlcnMAAAAAB9AAAAAPUHJpY2VMZXZlbFN0b3JlAAAAAAAAAAALc2VsbF9vcmRlcnMAAAAH0AAAAA9QcmljZUxldmVsU3RvcmUA",
            "AAAAAQAAAAAAAAAAAAAAD1ByaWNlTGV2ZWxTdG9yZQAAAAACAAAAAAAAAAlsZXZlbF9pZHMAAAAAAAPsAAAACgAAAAQAAAAAAAAABmxldmVscwAAAAAD6gAAB9AAAAAKUHJpY2VTdG9yZQAA",
            "AAAAAQAAAAAAAAAAAAAAClByaWNlU3RvcmUAAAAAAAQAAAAAAAAACW9yZGVyX2lkcwAAAAAAA+wAAAAGAAAABAAAAAAAAAAGb3JkZXJzAAAAAAPqAAAH0AAAAAVPcmRlcgAAAAAAAAAAAAARb3JkZXJzX2lkX2NvdW50ZXIAAAAAAAAGAAAAAAAAAAVwcmljZQAAAAAAAAo=",
            "AAAAAQAAAAAAAAAAAAAAElVzZXJCYWxhbmNlTWFuYWdlcgAAAAAAAgAAAAAAAAAFdG9rZW4AAAAAAAATAAAAAAAAAAR1c2VyAAAAEw==",
            "AAAAAQAAAAAAAAAAAAAADFVzZXJCYWxhbmNlcwAAAAIAAAAAAAAAB2JhbGFuY2UAAAAACwAAAAAAAAASYmFsYW5jZV9pbl90cmFkaW5nAAAAAAAL",
            "AAAAAQAAAAAAAAAAAAAAC1BhaXJNYW5hZ2VyAAAAAAEAAAAAAAAABnN5bWJvbAAAAAAAEA==",
            "AAAAAQAAAAAAAAAAAAAAD1BhaXJTdG9yYWdlSW5mbwAAAAADAAAAAAAAAAZzdGF0dXMAAAAAB9AAAAANTGlzdGluZ1N0YXR1cwAAAAAAAAAAAAAGdG9rZW4xAAAAAAATAAAAAAAAAAZ0b2tlbjIAAAAAABM=",
            "AAAAAQAAAAAAAAAAAAAADFRva2VuTWFuYWdlcgAAAAEAAAAAAAAABXRva2VuAAAAAAAAEw==",
            "AAAAAgAAAAAAAAAAAAAADUxpc3RpbmdTdGF0dXMAAAAAAAACAAAAAAAAAAAAAAAGTGlzdGVkAAAAAAAAAAAAAAAAAAhEZWxpc3RlZA==",
            "AAAAAgAAAAAAAAAAAAAACkZpbGxTdGF0dXMAAAAAAAMAAAAAAAAAAAAAAAhDb21wbGV0ZQAAAAAAAAAAAAAAB1BhcnRpYWwAAAAAAAAAAAAAAAAETm9uZQ==",
            "AAAAAQAAAAAAAAAAAAAACU1ha2VyRmlsbAAAAAAAAAQAAAAAAAAAC2ZpbGxfYW1vdW50AAAAAAoAAAAAAAAACWZpbGxfdHlwZQAAAAAAB9AAAAAKRmlsbFN0YXR1cwAAAAAAAAAAAAttYWtlcl9vcmRlcgAAAAfQAAAABU9yZGVyAAAAAAAAAAAAAANvaXgAAAAH0AAAAAtPcmRlckJvb2tJZAA=",
            "AAAAAQAAAAAAAAAAAAAAC1BlbmRpbmdGaWxsAAAAAAMAAAAAAAAAC21ha2VyX2ZpbGxzAAAAA+oAAAfQAAAACU1ha2VyRmlsbAAAAAAAAAAAAAARdGFrZXJfZmlsbF9zdGF0dXMAAAAAAAfQAAAACkZpbGxTdGF0dXMAAAAAAAAAAAALdGFrZXJfb3JkZXIAAAAH0AAAAAVPcmRlcgAAAA==",
            "AAAAAAAAAAAAAAAMY3JlYXRlX29yZGVyAAAABAAAAAAAAAAMdHJhZGluZ19wYWlyAAAD7QAAAAIAAAATAAAAEwAAAAAAAAAKb3JkZXJfdHlwZQAAAAAH0AAAAAlPcmRlclR5cGUAAAAAAAAAAAAABHNpZGUAAAfQAAAACU9yZGVyU2lkZQAAAAAAAAAAAAAFb3JkZXIAAAAAAAfQAAAACE5ld09yZGVyAAAAAQAAA+gAAAfQAAAAC09yZGVyQm9va0lkAA==",
            "AAAAAAAAAAAAAAAMY2FuY2VsX29yZGVyAAAAAgAAAAAAAAAMdHJhZGluZ19wYWlyAAAD7QAAAAIAAAATAAAAEwAAAAAAAAAIb3JkZXJfaWQAAAfQAAAAC09yZGVyQm9va0lkAAAAAAEAAAAB",
            "AAAAAAAAAAAAAAAHZGVwb3NpdAAAAAADAAAAAAAAAAR1c2VyAAAAEwAAAAAAAAAFdG9rZW4AAAAAAAATAAAAAAAAAAZhbW91bnQAAAAAAAsAAAAA",
            "AAAAAAAAAAAAAAAId2l0aGRyYXcAAAADAAAAAAAAAAR1c2VyAAAAEwAAAAAAAAAFdG9rZW4AAAAAAAATAAAAAAAAAAZhbW91bnQAAAAAAAsAAAAA",
            "AAAAAAAAAAAAAAAIYmFsYW5jZXMAAAACAAAAAAAAAAR1c2VyAAAAEwAAAAAAAAAFdG9rZW4AAAAAAAATAAAAAQAAB9AAAAAMVXNlckJhbGFuY2Vz",
            "AAAAAAAAAAAAAAAFb3duZXIAAAAAAAAAAAAAAQAAABM=",
            "AAAAAAAAAAAAAAANZmVlX2NvbGxlY3RvcgAAAAAAAAAAAAABAAAAEw==",
            "AAAAAAAAAAAAAAAPaXNfdG9rZW5fbGlzdGVkAAAAAAEAAAAAAAAABXRva2VuAAAAAAAAEwAAAAEAAAAB",
            "AAAAAAAAAAAAAAAOaXNfcGFpcl9saXN0ZWQAAAAAAAEAAAAAAAAABnN5bWJvbAAAAAAAEAAAAAEAAAAB",
            "AAAAAAAAAAAAAAAQc2V0X3Rva2VuX3N0YXR1cwAAAAIAAAAAAAAABXRva2VuAAAAAAAAEwAAAAAAAAAGc3RhdHVzAAAAAAfQAAAADUxpc3RpbmdTdGF0dXMAAAAAAAAA",
            "AAAAAAAAAAAAAAAPc2V0X3BhaXJfc3RhdHVzAAAAAAQAAAAAAAAABnN5bWJvbAAAAAAAEAAAAAAAAAAGdG9rZW4xAAAAAAATAAAAAAAAAAZ0b2tlbjIAAAAAABMAAAAAAAAABnN0YXR1cwAAAAAH0AAAAA1MaXN0aW5nU3RhdHVzAAAAAAAAAA=="]), options);
        this.options = options;
    }
    fromJSON = {
        create_order: (this.txFromJSON),
        cancel_order: (this.txFromJSON),
        deposit: (this.txFromJSON),
        withdraw: (this.txFromJSON),
        balances: (this.txFromJSON),
        owner: (this.txFromJSON),
        fee_collector: (this.txFromJSON),
        is_token_listed: (this.txFromJSON),
        is_pair_listed: (this.txFromJSON),
        set_token_status: (this.txFromJSON),
        set_pair_status: (this.txFromJSON)
    };
}
